What happens when you initialize a repository? Why do you need to do it?

When I initialize a repository nothing phyisically happens to my file, it just sets up the directory to be ready to take commits. This is the very beginning of what I need to do to be able to use version control.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area gives me a location with the hidden files. It allows me to work on past commits.

The working directory is just a place to keep all the folders and to save files manually over time.

How can you use the staging area to make sure you have one commit per logical change?

I could check past versions and make sure that I am making logical choices in my commits. If I do to little or to much I should be able to notice as I look over my commits.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Working with different branches lets me expeirment, work on different settings, or if I am just not sure what I am changing. Any time that I am working on something different.

How do the diagrams help you visualize the branch structure?

Just like webdesign, it helps to draw it out with pencil and paper to visualize what is going on.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

We are able to make different branches to work on different ideas. Merging two branches together allows us to make add all the code together and have a large master version that we will soon share with the world.